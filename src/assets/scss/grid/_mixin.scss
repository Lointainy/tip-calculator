//Base style for container
@mixin container {
  max-width: $container-mw + $grid-space;
  margin: 0 auto;
  padding: 0 $grid-space-side;
  // background-color: #aaa;
}

@mixin container-width($value) {
  $value: map-get($container-value, $value);
  max-width: $value;
} // container width

//Base style for row
@mixin row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 (-$grid-space-side);
}

// Base style for all columns
@mixin col($size) {
  flex: 0 0 auto;
  width: calc(#{percentage(math.div($size, $grid-columns))} - #{$grid-space});
  margin: 0 $grid-space-side;
}

@mixin offset($size) {
  margin-left: calc((#{percentage(math.div($size, $grid-columns))} - #{$grid-space}) + ((#{$grid-space-side}) * 3));
} // offset for columns

//Custom media query
@mixin mediaWidth($width, $value) {
  $value: map-get($media-value, $value);
  @media (#{$value}-width: $width) {
    @content;
  }
}

// Media query by breakpoints

@mixin forMedia($width, $value) {
  $value: map-get($media-value, $value);
  @media (#{$value}-width: $width) {
    @content;
  }
} // helper mixin for @mixin media

@mixin media($name, $value) {
  $width: map-get($grid-bp, $name);
  @include forMedia($width, $value) {
    @content;
  }
}

@mixin forMediaEach($width) {
  @media (min-width: $width) {
    @content;
  }
} // helper mixin for @each and @for (create classes for columns)
